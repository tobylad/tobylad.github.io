{"version":3,"sources":["img/bootstrap-brands.svg","img/react-brands.svg","img/css3-alt-brands.svg","img/gem-regular.svg","img/github-brands.svg","img/html5-brands.svg","img/js-square-brands.svg","img/laravel-brands.svg","img/laptop-code-solid.svg","img/laptop-code-solid-white.svg","img/user-tie-solid.svg","img/user-tie-solid-white.svg","img/project-diagram-solid.svg","img/project-diagram-solid-white.svg","components/Header.js","components/Developer.js","components/Professional.js","components/Project.js","components/TileSet.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Developer","href","target","rel","src","javascriptIcon","alt","bootstrapIcon","htmlIcon","cssIcon","reactIcon","rubyIcon","laravelIcon","githubIcon","Professional","Project","TileSet","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","switchActiveIcon","iconStr","state","activeTile","setState","getIcon","laptop","laptopIcon","laptop-active","laptopIconWhite","proDude","proDudeIcon","proDude-active","proDudeIconWhite","project","projectIcon","project-active","projectIconWhite","getTileImg","tile","handleActiveSection","icon","_this2","id","onClick","components_Developer","components_Professional","components_Project","React","Component","App","components_Header","components_TileSet","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e165e4eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bootstrap-brands.14376208.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-brands.ef2d68a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/css3-alt-brands.b69d5320.svg\";","module.exports = __webpack_public_path__ + \"static/media/gem-regular.74906969.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-brands.92db56a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/html5-brands.7f557c8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/js-square-brands.90c0fda1.svg\";","module.exports = __webpack_public_path__ + \"static/media/laravel-brands.d76bc7b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/laptop-code-solid.391e3c34.svg\";","module.exports = __webpack_public_path__ + \"static/media/laptop-code-solid-white.7668204b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-tie-solid.48df1a32.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-tie-solid-white.10f7871a.svg\";","module.exports = __webpack_public_path__ + \"static/media/project-diagram-solid.abde2fe9.svg\";","module.exports = __webpack_public_path__ + \"static/media/project-diagram-solid-white.6c334797.svg\";","import React from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"row\">\n      <div className=\"col-10 offset-1 col-lg-6 offset-lg-3 tagline\">\n        <p className=\"my-name\">Toby Ladislas</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport '../styles/Developer.css';\nimport bootstrapIcon from '../img/bootstrap-brands.svg';\nimport reactIcon from '../img/react-brands.svg';\nimport cssIcon from '../img/css3-alt-brands.svg';\nimport rubyIcon from '../img/gem-regular.svg';\nimport githubIcon from '../img/github-brands.svg';\nimport htmlIcon from '../img/html5-brands.svg';\nimport javascriptIcon from '../img/js-square-brands.svg';\nimport laravelIcon from '../img/laravel-brands.svg';\n\nfunction Developer() {\n  return(\n    <div className=\"developer-wrapper\">\n\n      <div className=\"row\">\n        <div className=\"col-6 experience\">\n          <div className=\"developer-heading\">\n            <h3>Experience</h3>\n          </div>\n\n          <h5><a href=\"https://www.capgemini.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Capgemini</a></h5>\n          <span>Consultant - DCX</span>\n\n          <ul>\n            <li>Fortune 500 client based in Atlanta, GA</li>\n            <li>Improve UX for thousands of customers daily</li>\n          </ul>\n\n          <h5><a href=\"https://rentloop.co/\" target=\"_blank\" rel=\"noopener noreferrer\">Rentloop</a></h5>\n          <span>Web Developer</span>\n\n          <ul>\n            <li>Chicago-based startup</li>\n            <li>Email automation</li>\n            <li>Website improvements</li>\n          </ul>\n        </div>\n\n        <div className=\"col-6 tech\">\n          <div className=\"developer-heading\">\n            <h3>Techs</h3>\n          </div>\n\n          <img className=\"tech-icon\" src={javascriptIcon} alt=\"\" />\n          <img className=\"tech-icon\" src={bootstrapIcon} alt=\"\" />\n          <img className=\"tech-icon\" src={htmlIcon} alt=\"\" />\n          <img className=\"tech-icon\" src={cssIcon} alt=\"\" />\n          <img className=\"tech-icon\" src={reactIcon} alt=\"\" />\n          <img className=\"tech-icon\" src={rubyIcon} alt=\"\" />\n          <img className=\"tech-icon\" src={laravelIcon} alt=\"\" />\n          <img className=\"tech-icon\" src={githubIcon} alt=\"\" />\n        </div>\n      </div>\n\n\n\n    </div>\n  );\n}\n\nexport default Developer;","import React from 'react';\n\nfunction Professional() {\n  return(\n    <h1>Professional</h1>\n  );\n}\n\nexport default Professional;","import React from 'react';\n\nfunction Project() {\n  return(\n    <h1>Project</h1>\n  );\n}\n\nexport default Project;","import React from 'react';\nimport '../styles/TileSet.css';\nimport Developer from './Developer';\nimport Professional from './Professional';\nimport Project from './Project';\nimport laptopIcon from '../img/laptop-code-solid.svg';\nimport laptopIconWhite from '../img/laptop-code-solid-white.svg';\nimport proDudeIcon from '../img/user-tie-solid.svg';\nimport proDudeIconWhite from '../img/user-tie-solid-white.svg';\nimport projectIcon from '../img/project-diagram-solid.svg';\nimport projectIconWhite from '../img/project-diagram-solid-white.svg';\n\nclass TileSet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTile: \"\"\n    };\n  }\n\n  switchActiveIcon = (iconStr) => {\n    if (iconStr === this.state.activeTile) {\n      this.setState({ activeTile: \"\" });\n    } else {\n      this.setState({ activeTile: iconStr });\n    }\n  }\n\n  getIcon = (iconStr) => {\n    const icons = {\n      \"laptop\": laptopIcon,\n      \"laptop-active\": laptopIconWhite,\n      \"proDude\": proDudeIcon,\n      \"proDude-active\": proDudeIconWhite,\n      \"project\": projectIcon,\n      \"project-active\": projectIconWhite,\n\n    };\n\n    return icons[iconStr];\n  }\n\n  getTileImg = (tile) => {\n    if (this.state.activeTile === tile) {\n      return this.getIcon(tile + \"-active\");\n    } else {\n      return this.getIcon(tile);\n    }\n  }\n\n  handleActiveSection = (icon) => {\n    if (this.state.activeTile === icon) {\n      return \"\";\n    } else {\n      return \"hidden\";\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"content\">\n        <div className=\"row\">\n          <div className=\"tile col-4\">\n            <img className=\"laptop tile-icon\" \n            src={this.getTileImg(\"laptop\")} \n            alt=\"laptop\" \n            onClick={() => this.switchActiveIcon(\"laptop\")}/>\n            <br/>\n            <span>Developer</span>\n          </div>\n\n          <div className=\"tile col-4\">\n            <img className=\"pro-dude tile-icon\" \n            src={this.getTileImg(\"proDude\")} \n            alt=\"proDude\" \n            onClick={() => this.switchActiveIcon(\"proDude\")} />\n            <br/>\n            <span>Professional</span>\n          </div>\n\n          <div className=\"tile col-4\">\n            <img className=\"project tile-icon\" \n            src={this.getTileImg(\"project\")} \n            alt=\"project\" \n            onClick={() => this.switchActiveIcon(\"project\")} />\n            <br/>\n            <span>Problem Solver</span>\n          </div>\n        </div>\n\n        <div className={this.handleActiveSection(\"laptop\")}><Developer /></div>\n        <div className={this.handleActiveSection(\"proDude\")}><Professional /></div>\n        <div className={this.handleActiveSection(\"project\")}><Project /></div>\n\n      </div>\n    );\n  }\n}\n\nexport default TileSet;","import React from 'react';\nimport '../styles/App.css';\nimport Header from './Header';\nimport TileSet from './TileSet';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <TileSet />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}